---

- name: make sure our user is in the audio group
  user: 
    name: "{{ansible_env.SUDO_USER}}"
    groups: audio
    append: yes
  register: adduser

- name: make sure supercollider/sclang is not running
  pids:
    name: sclang
  register: scpid

- name: fail if sclang is running
  fail:
    msg: "SuperCollider is running (pid: {{ scpid.pids }}), make sure you have shutdown all sclang processes before running this role"
  when: scpid.pids|length > 0

- block:
  - name: update cabal
    shell: cabal update  

  - name: compile and install tidal
    shell: cabal install tidal
    register: tidin
    changed_when: "not tidin.stdout is search('All the requested packages are already installed:')"

  - name: create template dest directory ~/.local/share (if required)
    file:
      path: "/home/{{ansible_env.SUDO_USER}}/.local/share"
      state: directory
      mode: '0775'

  - name: copy superdirt_*.scd templates to ~/.local/share/
    template:
      src: "templates/{{ item }}.scd.template"
      dest: "/home/{{ansible_env.SUDO_USER}}/.local/share/{{ item }}.scd"
      mode: 0640
    with_items:
      - superdirt_install
      - superdirt_check_install

  - block:
    - name: install/update SuperDirt and samples in .local/share/SuperCollider/, via sclang shell
      command: "sclang /home/{{ansible_env.SUDO_USER}}/.local/share/superdirt_install.scd"
      failed_when: false

    - name: check if superdirt installed successfully
      command: "sclang /home/{{ansible_env.SUDO_USER}}/.local/share/superdirt_check_install.scd"
      changed_when: false

    when: ansible_env.DISPLAY is defined

  - block:
    - name: install/update SuperDirt and samples in .local/share/SuperCollider/, via sclang shell (HEADLESS option)
      command: "sclang /home/{{ansible_env.SUDO_USER}}/.local/share/superdirt_install.scd"
      failed_when: false
      environment:
        DISPLAY: :99

    - name: check if superdirt installed successfully
      command: "sclang /home/{{ansible_env.SUDO_USER}}/.local/share/superdirt_check_install.scd"
      environment:
        DISPLAY: :99
      changed_when: false

    when: ansible_env.DISPLAY is not defined

  - name: make sure our SuperCollider config dir exists
    file:
      path: "{{ sc_dir }}"
      state: directory
      mode: 0755

  - name: copy SuperCollider startup.scd template (backup any existing)
    template:
      src: templates/startup.scd.template
      dest: "{{ sc_dir }}/startup.scd"
      mode: 0640
      backup: yes

  become: yes
  become_method: su
  become_user: "{{ansible_env.SUDO_USER}}"
  become_flags: '-s /bin/bash'

- debug:
    msg: "NOTE: {{ansible_env.SUDO_USER}} has been added to audio group, logout/reboot **after** ansible finishes (waiting for 10s)"
  when: adduser.changed

- wait_for:
    timeout: 10
  when: adduser.changed

- block:
  - name: stop xvfb service
    systemd:
      state: stopped
      name: xvfb.tmp.service
  when: ansible_env.DISPLAY is not defined

---

- name: make sure our user is in the audio group
  user: 
    name: "{{ansible_env.SUDO_USER}}"
    groups: audio
    append: yes
  register: adduser

- name: exit if sclang/supercollider is already running
  command: "pgrep sclang -u {{ansible_env.SUDO_USER}}"
  register: scpid
  failed_when: scpid.rc == 0
  changed_when: false

- block:
  - name: update cabal
    shell: cabal update  
  changed_when: false

  - name: compile and install tidal
    shell: cabal install tidal
    register: tidin
    changed_when: "not tidin.stdout is search('All the requested packages are already installed:')"
  
  become: yes
  become_method: su
  become_user: "{{ansible_env.SUDO_USER}}"
  become_flags: '-s /bin/bash'

- block:
  - name: get default BootTidal.hs locations
    shell: ghc-pkg field tidal data-dir | head -n 1 | awk '{print $2}'
    register: tidloc
    changed_when: False

  - name: "set default BootTidal.hs location ({{ tidloc.stdout }})"
    set_fact:
      boottidal_hs: "{{ tidloc.stdout }}/BootTidal.hs"

  become: yes
  become_method: su
  become_user: "{{ansible_env.SUDO_USER}}"
  become_flags: '-s /bin/bash'

- name: load mutable-instruments parameter file in BootTidal.hs (if required)
  lineinfile:
      path: "{{ boottidal_hs }}"
      insertbefore: '^:set prompt (.*$)'
      line: ":script /home/{{ansible_env.SUDO_USER}}/.local/share/ansible-tidalcycles/scripts/mutable-instruments-ugens_parameters.hs"
  when: sc_ugens is defined and "mutable-instruments" in sc_ugens

- block:
  - name: get latest superdirt version tag from the repo
    shell: git ls-remote https://github.com/musikinformatik/SuperDirt.git | grep tags | tail -n1 | awk -F/ '{print $NF}'
    register: sdver

  - set_fact:
      superdirt_ver: "{{ sdver.stdout }}"

  - name: create template dest directory ~/.local/share (if required)
    file:
      path: "/home/{{ansible_env.SUDO_USER}}/.local/share"
      state: directory
      mode: '0775'

  - name: copy superdirt_*.scd templates to ~/.local/share/
    template:
      src: "templates/{{ item }}.scd.template"
      dest: "/home/{{ansible_env.SUDO_USER}}/.local/share/{{ item }}.scd"
      mode: 0640
    with_items:
      - superdirt_install

  - name: set DISPLAY variable for sclang running
    set_fact:
      display: :99
    when: ansible_env.DISPLAY is not defined

  - set_fact:
      display: "{{ ansible_env.DISPLAY }}"
    when: display is not defined

  - name: install SuperDirt
    shell: "sclang /home/{{ansible_env.SUDO_USER}}/.local/share/superdirt_install.scd >> /home/{{ansible_env.SUDO_USER}}/.local/share/sc_install.log"
    environment:
      DISPLAY: "{{ display }}"

  - name: make sure our SuperCollider config dir exists
    file:
      path: "{{ sc_conf_dir }}"
      state: directory
      mode: 0755

  - name: copy SuperCollider startup.scd template (backup any existing)
    template:
      src: templates/startup.scd.template
      dest: "{{ sc_conf_dir }}/startup.scd"
      mode: 0640
      backup: yes
    tags:
    - config

  become: yes
  become_method: su
  become_user: "{{ansible_env.SUDO_USER}}"
  become_flags: '-s /bin/bash'

- debug:
    msg: "NOTE: {{ansible_env.SUDO_USER}} has been added to audio group, logout/reboot **after** ansible finishes (waiting for 10s)"
  when: adduser.changed

- wait_for:
    timeout: 10
  when: adduser.changed

- block:
  - name: stop xvfb service
    systemd:
      state: stopped
      name: xvfb.tmp.service
  when: ansible_env.DISPLAY is not defined
